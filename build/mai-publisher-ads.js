(()=>{window.pbjs=window.pbjs||{que:[]},window.googletag=window.googletag||{},googletag.cmd=googletag.cmd||[];const e=maiPubAdsVars.ads,t=[],a=[],i=maiPubAdsVars.gamBase,o=maiPubAdsVars.gamBaseClient,s="refresh",n=maiPubAdsVars.targets.refresh,r={},d={},g=5e3,l=window.location.search.includes("dfpdeb")||window.location.search.includes("maideb")||window.location.search.includes("pbjs_debug=true"),u=maiPubAdsVars.debug,c=Boolean(maiPubAdsVars.consent),m=maiPubAdsVars.ppid,p=function(){let e=!1;return e=document.cookie.match(/(?:^|;)\s*maipub_consent=([^;]*)(?:;|$)/),e=!(!e||!e[1])&&e[1],e||(e=localStorage.getItem("maipub_consent")),Boolean(e)}(),b=function(){const e=z(),t=localStorage.getItem("maipub_ppid");return e||t||""}();let f=Date.now(),h=c||p,P="",v=!1,y=!1,A=!1,S=!1;if(E("maiPubVersion: 238"),m?(P=m,E(`Using server-side PPID: ${P}`)):b&&(P=b,E(`Using local PPID: ${P}`)),maiPubAdsVars.amazonUAM?(E(`AmazonUAM enabled for domain, ready to init: ${maiPubAdsVars.amazonUAM}`),function(e,t,a,i,o,s,n){function r(a,i){t[e]._Q.push([a,i])}t[e]||(t[e]={init:function(){r("i",arguments)},fetchBids:function(){r("f",arguments)},setDisplayBids:function(){},targetingKeys:function(){return[]},_Q:[]},(s=a.createElement(i)).async=!0,s.src="//c.amazon-adsystem.com/aax2/apstag.js",(n=a.getElementsByTagName(i)[0]).parentNode.insertBefore(s,n))}("apstag",window,document,"script"),apstag.init({pubID:"79166f25-5776-4c3e-9537-abad9a584b43",adServer:"googletag",schain:{complete:1,ver:"1.0",nodes:[{asi:"bizbudding.com",sid:maiPubAdsVars.sellersId,hp:1,name:maiPubAdsVars.sellersName,domain:maiPubAdsVars.domain}]}}),E("AmazonUAM apstag.init() called, apstag object contents:",{_Q:apstag._Q,init:apstag.init,fetchBids:apstag.fetchBids,setDisplayBids:apstag.setDisplayBids,targetingKeys:apstag.targetingKeys})):E("AmazonUAM disabled for domain, skipping init"),maiPubAdsVars.magnite){E(`MagniteDM enabled for domain, ready to init: ${maiPubAdsVars.magnite}`),maiPubAdsVars.ortb2.mobile=parseInt(maiPubAdsVars.ortb2.mobile),maiPubAdsVars.ortb2.privacypolicy=parseInt(maiPubAdsVars.ortb2.privacypolicy),maiPubAdsVars.ortb2.cattax=parseInt(maiPubAdsVars.ortb2.cattax),maiPubAdsVars.ortb2.content.cattax=parseInt(maiPubAdsVars.ortb2.content.cattax);const e=setInterval((()=>{"undefined"!=typeof pbjs&&void 0!==pbjs.que?(clearInterval(e),E("Prebid.js for MagniteDM loaded, proceeding with configuration"),E("About to configure Prebid.js, checking if pbjs exists:",typeof pbjs),E("About to configure Prebid.js, checking if pbjs.que exists:",typeof pbjs.que),pbjs.que.push((function(){try{E("pbjs.que.push: starting Prebid.js configuration using MagniteDM");const e={bidderTimeout:g,enableTIDs:!0,ortb2:maiPubAdsVars.ortb2,schain:{complete:1,ver:"1.0",nodes:[{asi:"bizbudding.com",sid:maiPubAdsVars.sellersId,hp:1,name:maiPubAdsVars.sellersName,domain:maiPubAdsVars.domain}]}};P?(e.userSync={userIds:[{name:"pubProvidedId",params:{eids:[{source:maiPubAdsVars.domain,uids:[{id:P,atype:1}]}]}}]},E(`Adding ppid to Prebid.js configuration: ${P}`)):E("No ppid to add to Prebid.js configuration, skipping"),pbjs.setConfig(e),E("Prebid.js configuration set, pbjsConfig:",e)}catch(e){E("Error in Prebid.js configuration:",e)}}))):("undefined"!=typeof pbjs&&E("Prebid.js pbjs object for MagniteDM undefined, waiting for it to load"),void 0!==pbjs.que&&E("Prebid.js pbjs.que for MagniteDM undefined, waiting for it to load"))}),100)}else E("MagniteDM disabled for domain, skipping init");if("function"==typeof __tcfapi){E("CMP: set timeout to proceed with initialization if CMP never responds");const e=setTimeout((()=>{y||(E("CMP: timeout, proceeding with initialization"),y=!0,M())}),2e3);try{E("CMP: adding event listener for CMP events"),__tcfapi("addEventListener",2,((t,a)=>{y||(!t||"tcloaded"!==t.eventStatus&&"useractioncomplete"!==t.eventStatus?E(`CMP: event not good status: ${t.eventStatus}`,t):(y=!0,h=Boolean(a),clearTimeout(e),E("CMP: loaded, proceeding with initialization",{tcData:t}),"function"==typeof __tcfapi?__tcfapi("getTCData",2,((e,t)=>{t&&e.vendor&&e.vendor.consents?(E("CMP: Google basic consent status:",e.vendor.consents[755]),E("CMP: eConsent status:",e.purpose&&e.purpose.consents&&e.purpose.consents[1])):E("CMP: Unable to determine Google basic consent and eConsent status")})):E("CMP: __tcfapi not available for Google basic consent and eConsent check"),M()))}))}catch(t){E("CMP: event listener error:",t),clearTimeout(e),y=!0,M()}}else E("CMP not present, marking as ready"),y=!0,M();if(maiPubAdsVars.matomo.enabled&&maiPubAdsVars.shouldTrack){E("Matomo: enabled and should track");const e=setTimeout((()=>{A||(E("Matomo timeout, proceeding with initialization"),A=!0,M())}),2e3);if(P)A=!0,clearTimeout(e),E(`Skipping Matomo initialization, using existing PPID: ${P}`),M();else if("undefined"!=typeof Matomo)try{const t=Matomo.getAsyncTracker();if(t){const a=t.getVisitorId();a&&w(a).then((t=>{P=t,A=!0,clearTimeout(e),E(`Matomo already initialized, generated PPID from visitor ID: ${P}`),M()})).catch((t=>{E("Error generating PPID from Matomo visitor ID:",t),w().then((t=>{P=t,A=!0,clearTimeout(e),E(`Matomo already initialized, generated random PPID after generation error: ${P}`),M()}))}))}}catch(t){E("Error accessing Matomo:",t),w().then((t=>{P=t,A=!0,clearTimeout(e),E(`Matomo already initialized, generated random PPID after catching error: ${P}`),M()}))}else E("Matomo not initialized, waiting for analytics init event"),document.addEventListener("maiPublisherAnalyticsInit",(function(t){w(t.detail.tracker.getVisitorId()).then((t=>{P=t,A=!0,clearTimeout(e),E(`Matomo async event fired, generated PPID from visitor ID: ${P}`),M()}))}),{once:!0})}else A=!0,maiPubAdsVars.matomo.enabled||E("Matomo was set as disabled"),maiPubAdsVars.shouldTrack||E("Matomo was set as should not track"),M();function M(){if(E("maiPubMaybeInit(): checking if we should initialize GAM, based on CMP and Matomo states"),!y&&"function"==typeof __tcfapi||!A&&maiPubAdsVars.matomo.enabled){const e=[];return y||"function"!=typeof __tcfapi||e.push("CMP"),!A&&maiPubAdsVars.matomo.enabled&&e.push("Matomo"),void E(`maiPubMaybeInit(): GAM not initialized, waiting for ${e.join(" and ")}`)}E("maiPubMaybeInit(): looks like we should initialize GAM"),P||w().then((e=>{P=e,E(`maiPubMaybeInit(): still No PPID available, generated random PPID: ${P}`)})).catch((e=>{E(`maiPubMaybeInit(): error generating random PPID: ${e}`)})),E(`maiPubMaybeInit(): initializing GAM with ppid: ${P}. Now calling maiPubInit()`),h===c&&h===p||(E("maiPubInit(): Consent different from local consent, storing consent"),function(e){E(`Storing consent in cookie and session storage: ${e}`),document.cookie=`maipub_consent=${e};path=/;max-age=31104000;SameSite=Lax;Secure`,localStorage.setItem("maipub_consent",e)}(h)),!P||P===m&&b&&P===b||(E("maiPubInit(): PPID different from local ppid, storing ppid"),function(e){h?(E(`Storing PPID in cookie: ${e}`),document.cookie=`maipub_ppid=${e};path=/;max-age=31104000;SameSite=Lax;Secure`):z()&&(E("No consent, removing PPID from cookie"),document.cookie="maipub_ppid=;path=/;expires=Thu, 01 Jan 1970 00:00:00 GMT;SameSite=Lax;Secure"),E(`Storing PPID in session storage: ${e}`),localStorage.setItem("maipub_ppid",e)}(P)),maiPubAdsVars.loadDelay?(E(`maiPubInit(): Delayed on window load, setting up event listener ${maiPubAdsVars.loadDelay}ms`),window.addEventListener("load",(()=>{E(`maiPubInit(): Delayed on window load, setting up event listener ${maiPubAdsVars.loadDelay}ms, running maiPubRun`),setTimeout(I,maiPubAdsVars.loadDelay)}),{once:!0})):"loading"===document.readyState?(E("maiPubInit(): No delay, but waiting for DOMContentLoaded"),document.addEventListener("DOMContentLoaded",I,{once:!0})):(E("maiPubInit(): No delay, DOMContentLoaded has run, running maiPubRun"),I())}function I(){const e=new IntersectionObserver(((e,t)=>{const a=[],i=[];E("maiPubRun() entering the observer,entries:",e),e.forEach((e=>{const o=e.target.getAttribute("id"),s=o.replace("mai-ad-","");e.isIntersecting?(E(`maiPubRun(): Intersecting, setting slot to visible: ${o}`),r[o].visible=!0,S?(E(`maiPubRun(): GPT is initialized, adding slug to BTFSlugs: ${s}`),i.push(s)):(E(`maiPubRun(): GPT is not initialized, adding slug to ATFSlugs: ${s}`),a.push(s)),l&&(e.target.style.outline="2px dashed red",E(`maiPubRun(): Intersecting, debug set, adding data-label attribute of slug: ${s}`),e.target.setAttribute("data-label",s)),E(`maiPubRun(): Intersecting, unobserving slot to let GAM events handle refreshing and visibility: ${o}`),t.unobserve(e.target)):(E(`maiPubRun(): Not intersecting, setting slot to not visible: ${o}`),r[o].visible=!1)})),a.length&&(E("maiPubRun(): There are ATF slugs, defining and displaying them"),googletag.cmd.push((()=>{a.forEach((e=>{E(`maiPubRun(): Defining the ATF slot: ${e}`),$(e),E(`maiPubRun(): Displaying the ATF slot: 'mai-ad-'${e}`),googletag.display("mai-ad-"+e)})),googletag.enableServices(),S=!0,E(`maiPubRun(): calling maiPubMaybeRequestSlots() for the ATF slots: ${a.join(", ")}`),D(a)}))),i.length&&(E("maiPubRun(): There are BTF slugs, defining and displaying them"),googletag.cmd.push((()=>{i.forEach((e=>{E(`maiPubRun(): Defining the BTF slot: ${e}`),$(e),E(`maiPubRun(): Displaying the BTF slot: 'mai-ad-'${e}`),googletag.display("mai-ad-"+e)})),E(`maiPubRun(): calling maiPubMaybeRequestSlots() for the BTF slots: ${i.join(", ")}`),D(i)})))}),{root:null,rootMargin:"600px 0px 600px 0px",threshold:0});E("maiPubRun(): Observer is set, root to null, rootMargin to 600px 0px 600px 0px, threshold to 0");try{googletag.cmd.push((()=>{E("googletag.cmd.push(): entering");const e=[...new Set([maiPubAdsVars.iabGlobalCat,maiPubAdsVars.iabCat].filter((e=>e)))];E(`googletag.cmd.push(): Got the IAB categories ${e}, removing duplicates: ${e.join(", ")}`),e.length&&(googletag.setConfig({pps:{taxonomies:{IAB_CONTENT_2_2:{values:e}}}}),E("googletag.cmd.push(): setConfig() for PPS IAB_CONTENT_2_2 IAB Categories:",{pps:{taxonomies:{IAB_CONTENT_2_2:{values:e}}}})),googletag.pubads().disableInitialLoad(),E("googletag.cmd.push(): googletag.pubads() Disabling initial load for header bidding"),googletag.pubads().enableSingleRequest(),E("googletag.cmd.push(): googletag.pubads() Enabling single request"),E("googletag.cmd.push(): googletag.pubads() Making ads centered"),googletag.pubads().setCentering(!0),P&&(googletag.pubads().setPublisherProvidedId(P),E(`googletag.cmd.push(): googletag.pubads() Setting PPID: ${P}`)),maiPubAdsVars.targets&&Object.keys(maiPubAdsVars.targets).forEach((e=>{googletag.pubads().setTargeting(e,maiPubAdsVars.targets[e].toString()),E(`googletag.cmd.push(): googletag.pubads() page-level targeting for ${e}:`,googletag.pubads().getTargeting(e))}))}))}catch(e){E("Error in Google Tag setup:",e)}E("Ready to identify ad units, add to slot manager, and observe them");try{googletag.cmd.push((()=>{try{const t=document.querySelectorAll(".mai-ad-unit");E(`googletag.cmd.push(): Found ${t.length} ad units:`,Array.from(t).map((e=>({id:e.id,className:e.className})))),t.forEach((t=>{const a=t.getAttribute("id");E(`googletag.cmd.push(): Found ad unit: ${a}`),r[a]={processing:!1,visible:null,lastRefreshTime:0,firstRender:!0},E(`googletag.cmd.push(): Added to slotManager: slotId=${a}, data=`,r[a]),e.observe(t),E(`googletag.cmd.push(): Observed the ad unit: ${t.id}, classname: (${t.className})`)})),E("googletag.cmd.push(): Successfully processed all ad units")}catch(e){E("googletag.cmd.push(): Error processing ad units:",e)}}))}catch(e){E("googletag.cmd.push(): Error in googletag.cmd.push:",e)}E("Ready to add event listeners to handle refreshable slots");try{googletag.cmd.push((()=>{try{googletag.pubads().addEventListener("slotRenderEnded",(e=>{const t=e.slot;if(!T(t))return void E(`Slot ${t.getSlotElementId()} is not a Mai Publisher slot, via slotRenderEnded`);const a=t.getSlotElementId(),i=a.replace("mai-ad-","");r[a].lastRefreshTime=Date.now(),r[a].processing=!1,e.isEmpty?E(`Slot empty: ${a}`,{slug:i,adUnitPath:t.getAdUnitPath(),sizes:e.size,targeting:t.getTargetingMap(),event:e}):E(`Slot filled: ${a}`,{slug:i,adUnitPath:t.getAdUnitPath(),sizes:e.size,targeting:t.getTargetingMap(),event:e}),R(t)?d[a]=setTimeout((()=>{D([i])}),32e3):E(`maiPubRun(): slot ${a} is not refreshable`)})),googletag.pubads().addEventListener("slotVisibilityChanged",(e=>{const t=e.slot;if(!T(t))return void E(`Slot ${t.getSlotElementId()} is not a Mai Publisher slot, via slotVisibilityChanged`);if(!R(t))return;const a=t.getSlotElementId(),i=a.replace("mai-ad-",""),o=e.inViewPercentage>5;r[a].visible=o,o&&D([i])})),E("googletag.cmd.push(): Successfully added event listeners")}catch(e){E("googletag.cmd.push(): Error adding event listeners:",e)}}))}catch(e){E("googletag.cmd.push(): Error in googletag.cmd.push for event listeners:",e)}}function $(r){const d=e?.[r]?.context&&"client"===e[r].context?o:i;E(`maiPubDefineSlot(): base: ${d}`);const g="mai-ad-"+r;E(`maiPubDefineSlot(): slotDivId: ${g}`);const l=d+e[r].id;E(`maiPubDefineSlot(): GAM Ad Unit Path: ${l}`);try{googletag.cmd.push((()=>{const i=googletag.defineSlot(l,e[r].sizes,g);E(`maiPubDefineSlot() googletag.cmd.push(): defineSlot: ${l}, sizes: ${e[r].sizes}, slotDivId: ${g}`),i.addService(googletag.pubads()),E("maiPubDefineSlot() googletag.cmd.push(): addService"),i.setTargeting(s,n),E(`maiPubDefineSlot() googletag.cmd.push(): refreshKey: ${s}, refreshValue: ${n}`),e[r].targets&&Object.keys(e[r].targets).forEach((t=>{i.setTargeting(t,e[r].targets[t]),E(`maiPubDefineSlot() googletag.cmd.push(): slot-level targeting: key ${t}, value: ${e[r].targets[t]}`)})),e[r].splitTest&&"rand"===e[r].splitTest&&(i.setTargeting("st",Math.floor(100*Math.random())),E(`maiPubDefineSlot() googletag.cmd.push(): splitTest: ${e[r].splitTest}, st: ${Math.floor(100*Math.random())}`)),i.defineSizeMapping(googletag.sizeMapping().addSize([1024,768],e[r].sizesDesktop).addSize([728,480],e[r].sizesTablet).addSize([0,0],e[r].sizesMobile).build()),E("maiPubDefineSlot() googletag.cmd.push(): defineSizeMapping"),E(`Defined slot: ${g} via ${l}`,{gamId:l,slot:i,targets:i.getTargetingMap()}),t.push(l),a.push(i)}))}catch(e){E("Error in googletag.cmd.push for slot definition:",e)}}function D(t){googletag.cmd.push((()=>{const o=Date.now(),s=t.map((e=>a.find((t=>"mai-ad-"+e===t.getSlotElementId())))).filter((e=>{if(!e)return E(`maiPubMaybeRequestSlots(): warning: Slot object not found for slug ${slug} during request check.`),!1;const t=e.getSlotElementId();if(r[t].firstRender)return E(`maiPubMaybeRequestSlots(): first request for ${t}`),!0;if(r[t].processing)return E(`maiPubMaybeRequestSlots(): skipping request for ${t} - already being processed`),!1;if(!r[t].visible)return E(`maiPubMaybeRequestSlots(): skipping request for ${t} - not visible`),clearTimeout(d[t]),delete d[t],!1;if(r[t].lastRefreshTime){if(o-r[t].lastRefreshTime<32e3)return E(`maiPubMaybeRequestSlots(): skipping request for ${t} - ${Math.round((o-r[t].lastRefreshTime)/1e3)} seconds since the last refresh`),!1;E(`maiPubMaybeRequestSlots(): requesting slot ${t} - ${Math.round((o-r[t].lastRefreshTime)/1e3)} seconds since the last refresh`)}return!0}));s.length&&function(t){t.forEach((e=>{const t=e.getSlotElementId();r[t].processing=!0,clearTimeout(d[t]),delete d[t]})),E(`Requesting slots: ${t.map((e=>e.getSlotElementId())).join(", ")}`);const a={adserverRequestSent:!1,prebidBidsReceived:!maiPubAdsVars.magnite,amazonBidsReceived:!maiPubAdsVars.amazonUAM},o=function(){if(a.adserverRequestSent)E("Adserver request already sent, skipping. State:",{prebidBidsReceived:a.prebidBidsReceived,amazonBidsReceived:a.amazonBidsReceived,slots:t.map((e=>e.getSlotElementId()))});else try{googletag.cmd.push((()=>{a.adserverRequestSent=!0,E(`sendAdserverRequest(): requestManager() set to true to refresh slots: ${t.map((e=>e.getSlotElementId())).join(", ")}`);try{t.forEach((e=>{const t=e.getSlotElementId();r[t].firstRender=!1}));try{googletag.pubads().refresh(t,{changeCorrelator:!1}),E(`sendAdserverRequest(): googletag.pubads().refresh() called for slots ${t.length} ${1===t.length?"slot":"slots"} via refresh(): ${t.map((e=>e.getSlotElementId())).join(", ")}`)}catch(e){E("Error calling googletag.pubads().refresh():",e)}}catch(e){E("Error refreshing individual slots:",e)}}))}catch(e){E("Error in queing refresh operation:",e)}};if(maiPubAdsVars.magnite&&pbjs.que.push((function(){const e=Date.now();pbjs.rp.requestBids({gptSlotObjects:t,timeout:g,callback:function(i,s,n){googletag.cmd.push((()=>{pbjs.setTargetingForGPTAsync&&pbjs.setTargetingForGPTAsync(t.map((e=>e.getSlotElementId()))),a.prebidBidsReceived=!0,E(`sendAdserverRequest(): Prebid response time: ${Date.now()-e}ms`,{bids:i,timedOut:s,auctionId:n}),a.amazonBidsReceived&&(E("sendAdserverRequest(): Sending adserver request via Prebid bids"),o())}))}})})),maiPubAdsVars.amazonUAM){const s=t.filter((t=>{const a=t.getSlotElementId().replace("mai-ad-","");return!(1===e[a].sizes.length&&"fluid"===e[a].sizes[0])&&"client"!==e[a].context})).map((t=>{const a=t.getSlotElementId(),o=a.replace("mai-ad-","");return{slotID:a,slotName:i+e[o].id,sizes:e[o].sizes}}));if(s.length){const e={slots:s,timeout:g,params:{adRefresh:"1"}};E("amazonConfig",e);const t=Date.now();apstag.fetchBids(e,(function(e){googletag.cmd.push((()=>{E(`Amazon response time: ${Date.now()-t}ms`,e),apstag.setDisplayBids(),a.amazonBidsReceived=!0,a.prebidBidsReceived&&(E(`Sending adserver request via amazon: ${s.map((e=>e.slotID.replace("mai-ad-",""))).join(", ")}`,s),o()),(l||u)&&e.forEach((e=>{e.error&&E("apstag.fetchBids error:",e)}))}))}))}else a.amazonBidsReceived=!0,a.prebidBidsReceived&&(E(`Sending adserver request without amazon slots to fetch: ${t.map((e=>e.getSlotElementId())).join(", ")}`,t),o())}maiPubAdsVars.magnite&&maiPubAdsVars.amazonUAM||(E(`Sending adserver request with GAM: ${t.map((e=>e.getSlotElementId())).join(", ")}`,t),o()),setTimeout((()=>{a.adserverRequestSent||(E("refresh() with failsafe timeout. Debug data:",{adserverRequestSent:a.adserverRequestSent,prebidBidsReceived:a.prebidBidsReceived,amazonBidsReceived:a.amazonBidsReceived,timing:{totalTime:Date.now()-f,bidderTimeout:g,fallbackTimeout:6e3}}),o())}),6e3)}(s)}))}function T(e){return e&&t.includes(e.getAdUnitPath())}function R(e){return e&&Boolean(e.getTargeting(s).shift())}async function w(e=""){if(v)return new Promise((e=>{const t=setInterval((()=>{v||(clearInterval(t),e(P))}),100)}));v=!0;try{let t=String(e||"");if(!t){if(!window.crypto||!window.crypto.subtle)throw new Error("Web Crypto API not available");t="function"==typeof crypto.randomUUID?crypto.randomUUID():Array.from(crypto.getRandomValues(new Uint8Array(16))).map((e=>e.toString(16).padStart(2,"0"))).join("")}const a=(new TextEncoder).encode(t),i=await crypto.subtle.digest("SHA-256",a);return Array.from(new Uint8Array(i)).map((e=>e.toString(16).padStart(2,"0"))).join("")}catch(e){return E("Error transforming ppid:",e),null}finally{v=!1}}function z(){const e=document.cookie.match(/(?:^|;)\s*maipub_ppid=([^;]*)(?:;|$)/);return e?.[1]||""}function E(...e){if(!l&&!u)return;let t="maipub ";const a=Date.now(),i=(new Date).toLocaleTimeString("en-US",{hour12:!0});t+=f===a?"start":a-f+"ms",console.log(`${t} ${i}`,...e)}})();
//# sourceMappingURL=mai-publisher-ads.js.map